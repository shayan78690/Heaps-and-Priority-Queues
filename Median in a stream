import java.util.*;

public class Solution {
    public static int[] findMedian(int[] arr, int n) {
        PriorityQueue<Integer> maxheap = new PriorityQueue<>(Collections.reverseOrder());
        PriorityQueue<Integer> minheap = new PriorityQueue<>();
        int ans[] = new int[n];
        for(int i = 0; i < n; i++) {
            int num = arr[i];
        
            if(maxheap.isEmpty() || maxheap.peek() >= num) {
            maxheap.add(num);
        }   else  {
            minheap.add(num);
        }

        if(maxheap.size() > minheap.size() + 1) {
            minheap.add(maxheap.poll());
        } else if(maxheap.size() < minheap.size()) {
            maxheap.add(minheap.poll());
        }

        if(maxheap.size() == minheap.size()) {
            ans[i] =  (maxheap.peek() + minheap.peek()) / 2;
        } else {
            ans[i] =  maxheap.peek();
        }
        }
        return ans;
    }
}
