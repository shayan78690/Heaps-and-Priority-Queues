class Solution {
    class Point implements Comparable<Point> {
        int x, y, distSq;

        Point(int x, int y) {
            this.x = x;
            this.y = y;
            this.distSq = x * x + y * y;
        }

        @Override
        public int compareTo(Point p2) {
            return this.distSq - p2.distSq;
        }
    }

    public int[][] kClosest(int[][] points, int k) {
        int n = points.length;
        PriorityQueue<Point> pq = new PriorityQueue<>();
        for (int i = 0; i < n; i++) {
            pq.add(new Point(points[i][0], points[i][1]));
        }

        int ans[][] = new int[k][2];
        for (int i = 0; i < k; i++) {
            Point p = pq.remove();
            ans[i][0] = p.x;
            ans[i][1] = p.y;
        }

        return ans;
    }
}
