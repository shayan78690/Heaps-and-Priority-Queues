
class Solution {
    static boolean isStraightHand(int N, int groupSize, int hand[]) {
        if (N % groupSize != 0) {
            return false;
        }

        HashMap<Integer, Integer> map = new HashMap<>();
        for (int card : hand) {
            map.put(card, map.getOrDefault(card, 0) + 1);
        }

        PriorityQueue<Integer> pq = new PriorityQueue<>(map.keySet());

        while (!pq.isEmpty()) {
            int start = pq.peek(); 
            for (int i = 0; i < groupSize; i++) {
                int currentCard = start + i;
                if (!map.containsKey(currentCard) || map.get(currentCard) == 0) {
                    return false; 
                }

                map.put(currentCard, map.get(currentCard) - 1);

                if (map.get(currentCard) == 0) {
                    map.remove(currentCard);
                    if (pq.peek() == currentCard) {
                        pq.poll(); 
                }
            }
        }
        }
        return true;
    }
}
